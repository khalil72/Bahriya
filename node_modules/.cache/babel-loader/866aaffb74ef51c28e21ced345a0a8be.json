{"ast":null,"code":"var _jsxFileName = \"F:\\\\project\\\\JawadAbbasi\\\\property051\\\\Bahriya\\\\src\\\\Components\\\\Layout\\\\AppDrawer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@material-ui/styles';\nimport { Divider, Grid, Link, Drawer } from '@mui/material';\nimport profile from '../../Assets/Images/profile2.webp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles({\n  BoxDrawer: {\n    backgroundColor: 'rgb(242, 243, 248)',\n    justifyContent: 'space-between',\n    borderRadius: '25px',\n    padding: '36px 22px 23px 16px'\n  }\n});\n\nconst AppDrawer = () => {\n  _s();\n\n  const useClasses = useStyle();\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false); // const [state, setState] = React.useState({\n  //     right: false,\n  //   });\n  // const toggleDrawer = (anchor, open) => (event) => {\n  //   if (\n  //     event &&\n  //     event.type === 'keydown' &&\n  //     (event.key === 'Tab' || event.key === 'Shift')\n  //   ) {\n  //     return;\n  //   }\n  //   setState({ ...state, [anchor]: open });\n  // };\n  // const list = (anchor) => (\n  //   <Box\n  //     sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n  //     role=\"presentation\"\n  //     onClick={toggleDrawer(anchor, false)}\n  //     onKeyDown={toggleDrawer(anchor, false)}\n  //   >\n  //    <Box className={useClasses.BoxDrawer}>\n  //     <Grid container>\n  //       <Grid lg={6} sm={12}>\n  //         <img src={profile} alt='/'  style={{width:'64px' , height:'64px'}}/>\n  //       </Grid>\n  //       <Grid lg={6} sm={12}>\n  //         <Link to='/login'>\n  //           <Button component='div' size='large'  variant=\"contained\"  sx={{backgroundColor:'black' , color:'white' , marginTop:'10px'\n  //         , \"&:hover\": {\n  //           boxShadow: '0 0em 0em 0 rgb(0 0 0 / 20%)',\n  //           backgroundColor: '#e8e8e8',\n  //           borderColor: 'transparent',\n  //           color: '#333333!important'\n  //         }\n  //         }}>\n  //               Login\n  //           </Button>\n  //         </Link>\n  //       </Grid>\n  //     </Grid>\n  //     <Divider />\n  //    </Box>\n  //   </Box>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsDrawerOpen(true),\n        size: \"large\",\n        edge: \"end\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: \"right\",\n        open: isDrawerOpen,\n        onClose: () => setIsDrawerOpen(false),\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: useClasses.BoxDrawer,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              lg: 6,\n              sm: 12,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: profile,\n                alt: \"/\",\n                style: {\n                  width: '64px',\n                  height: '64px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              lg: 6,\n              sm: 12,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  component: \"div\",\n                  size: \"large\",\n                  variant: \"contained\",\n                  sx: {\n                    backgroundColor: 'black',\n                    color: 'white',\n                    marginTop: '10px',\n                    \"&:hover\": {\n                      boxShadow: '0 0em 0em 0 rgb(0 0 0 / 20%)',\n                      backgroundColor: '#e8e8e8',\n                      borderColor: 'transparent',\n                      color: '#333333!important'\n                    }\n                  },\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 16\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppDrawer, \"VCEZj6hBQnGS/i+nuA4BXwBcG4U=\", false, function () {\n  return [useStyle];\n});\n\n_c = AppDrawer;\nexport default AppDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppDrawer\");","map":{"version":3,"names":["React","useState","Box","SwipeableDrawer","Button","makeStyles","Divider","Grid","Link","Drawer","profile","useStyle","BoxDrawer","backgroundColor","justifyContent","borderRadius","padding","AppDrawer","useClasses","isDrawerOpen","setIsDrawerOpen","width","height","color","marginTop","boxShadow","borderColor"],"sources":["F:/project/JawadAbbasi/property051/Bahriya/src/Components/Layout/AppDrawer.js"],"sourcesContent":["import React , {useState} from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport Button from '@mui/material/Button';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Divider, Grid, Link , Drawer } from '@mui/material';\r\nimport profile  from '../../Assets/Images/profile2.webp'\r\nconst useStyle = makeStyles({\r\n  BoxDrawer:{\r\n    backgroundColor:'rgb(242, 243, 248)',\r\n    justifyContent: 'space-between',\r\n    borderRadius:'25px',\r\n    padding: '36px 22px 23px 16px'\r\n\r\n  \r\n  }\r\n\r\n  })\r\n\r\nconst AppDrawer = () => {\r\n  const useClasses = useStyle();\r\n  const[isDrawerOpen , setIsDrawerOpen]= useState(false);\r\n    // const [state, setState] = React.useState({\r\n     \r\n       \r\n    //     right: false,\r\n    //   });\r\n    \r\n      // const toggleDrawer = (anchor, open) => (event) => {\r\n      //   if (\r\n      //     event &&\r\n      //     event.type === 'keydown' &&\r\n      //     (event.key === 'Tab' || event.key === 'Shift')\r\n      //   ) {\r\n      //     return;\r\n      //   }\r\n    \r\n      //   setState({ ...state, [anchor]: open });\r\n      // };\r\n    \r\n      // const list = (anchor) => (\r\n      //   <Box\r\n      //     sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\r\n      //     role=\"presentation\"\r\n      //     onClick={toggleDrawer(anchor, false)}\r\n      //     onKeyDown={toggleDrawer(anchor, false)}\r\n      //   >\r\n      //    <Box className={useClasses.BoxDrawer}>\r\n      //     <Grid container>\r\n      //       <Grid lg={6} sm={12}>\r\n      //         <img src={profile} alt='/'  style={{width:'64px' , height:'64px'}}/>\r\n\r\n      //       </Grid>\r\n  \r\n      //       <Grid lg={6} sm={12}>\r\n      //         <Link to='/login'>\r\n      //           <Button component='div' size='large'  variant=\"contained\"  sx={{backgroundColor:'black' , color:'white' , marginTop:'10px'\r\n      //         , \"&:hover\": {\r\n      //           boxShadow: '0 0em 0em 0 rgb(0 0 0 / 20%)',\r\n      //           backgroundColor: '#e8e8e8',\r\n      //           borderColor: 'transparent',\r\n      //           color: '#333333!important'\r\n      //         }\r\n      //         }}>\r\n      //               Login\r\n      //           </Button>\r\n      //         </Link>\r\n      //       </Grid>\r\n      //     </Grid>\r\n\r\n      //     <Divider />\r\n      //    </Box>\r\n        \r\n         \r\n      //   </Box>\r\n      // );\r\n  return (\r\n    <Box>\r\n         <Box>\r\n         <Button  onClick={() => setIsDrawerOpen(true)} size=\"large\" edge='end'>\r\n             \r\n          </Button>\r\n\r\n         <Drawer anchor='right' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)} >\r\n         <Box className={useClasses.BoxDrawer}>\r\n         <Grid container>\r\n             <Grid lg={6} sm={12}>\r\n             <img src={profile} alt='/'  style={{width:'64px' , height:'64px'}}/>\r\n\r\n           </Grid>\r\n  \r\n             <Grid lg={6} sm={12}>\r\n               <Link to='/login'>\r\n               <Button component='div' size='large'  variant=\"contained\"  sx={{backgroundColor:'black' , color:'white' , marginTop:'10px'\r\n             , \"&:hover\": {\r\n                 boxShadow: '0 0em 0em 0 rgb(0 0 0 / 20%)',\r\n               backgroundColor: '#e8e8e8',\r\n                borderColor: 'transparent',\r\n                color: '#333333!important'\r\n              }\r\n             }}>\r\n                   Login\r\n                </Button>\r\n               </Link>\r\n            </Grid>\r\n           </Grid>\r\n          </Box>\r\n          \r\n         \r\n    \r\n    </Drawer>\r\n      {/* {[ 'user'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))} */}\r\n    </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AppDrawer"],"mappings":"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"},"metadata":{},"sourceType":"module"}
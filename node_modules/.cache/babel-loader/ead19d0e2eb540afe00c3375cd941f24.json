{"ast":null,"code":"// Generated by CoffeeScript 1.12.2\n(function () {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if (typeof performance !== \"undefined\" && performance !== null && performance.now) {\n    module.exports = function () {\n      return performance.now();\n    };\n  } else if (typeof process !== \"undefined\" && process !== null && process.hrtime) {\n    module.exports = function () {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n\n    hrtime = process.hrtime;\n\n    getNanoSeconds = function () {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function () {\n      return Date.now() - loadTime;\n    };\n\n    loadTime = Date.now();\n  } else {\n    module.exports = function () {\n      return new Date().getTime() - loadTime;\n    };\n\n    loadTime = new Date().getTime();\n  }\n}).call(this);","map":{"version":3,"mappings":";AAAA;EAAA;;EAAA,IAAG,8DAAiBA,WAAW,CAACC,GAAhC;IACEC,MAAM,CAACC,OAAP,GAAiB;aAAGH,WAAW,CAACC,GAAZ;IAAH,CAAjB;EADF,OAEK,IAAG,sDAAaG,OAAO,CAACC,MAAxB;IACHH,MAAM,CAACC,OAAP,GAAiB;aAAG,CAACG,mBAAmBC,YAApB,IAAoC;IAAvC,CAAjB;;IACAF,SAASD,OAAO,CAACC,MAAjB;;IACAC,iBAAiB;MACf;MAAAE,KAAKH,QAAL;aACAG,EAAG,GAAH,GAAQ,GAAR,GAAcA,EAAG;IAFF,CAAjB;;IAGAC,iBAAiBH,gBAAjB;IACAI,SAASN,OAAO,CAACO,MAAR,KAAmB,GAA5B;IACAJ,eAAeE,iBAAiBC,MAAhC;EARG,OASA,IAAGE,IAAI,CAACX,GAAR;IACHC,MAAM,CAACC,OAAP,GAAiB;aAAGS,IAAI,CAACX,GAAL,KAAaY;IAAhB,CAAjB;;IACAA,WAAWD,IAAI,CAACX,GAAL,EAAX;EAFG;IAIHC,MAAM,CAACC,OAAP,GAAiB;aAAO,WAAOW,OAAP,KAAmBD;IAA1B,CAAjB;;IACAA,WAAe,WAAOC,OAAP,EAAf;;CAhBF","names":["performance","now","module","exports","process","hrtime","getNanoSeconds","nodeLoadTime","hr","moduleLoadTime","upTime","uptime","Date","loadTime","getTime"],"sources":["E:\\Work Data\\Behria\\node_modules\\performance-now\\src\\performance-now.coffee"],"sourcesContent":["if performance? and performance.now\r\n  module.exports = -> performance.now()\r\nelse if process? and process.hrtime\r\n  module.exports = -> (getNanoSeconds() - nodeLoadTime) / 1e6\r\n  hrtime = process.hrtime\r\n  getNanoSeconds = ->\r\n    hr = hrtime()\r\n    hr[0] * 1e9 + hr[1]\r\n  moduleLoadTime = getNanoSeconds()\r\n  upTime = process.uptime() * 1e9\r\n  nodeLoadTime = moduleLoadTime - upTime\r\nelse if Date.now\r\n  module.exports = -> Date.now() - loadTime\r\n  loadTime = Date.now()\r\nelse\r\n  module.exports = -> new Date().getTime() - loadTime\r\n  loadTime = new Date().getTime()\r\n"]},"metadata":{},"sourceType":"script"}
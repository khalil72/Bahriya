{"ast":null,"code":"var _jsxFileName = \"F:\\\\project\\\\JawadAbbasi\\\\property051\\\\src\\\\Components\\\\Banner\\\\SelectOption.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectOption = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"SelectOption\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SelectOption;\nexport default SelectOption; // import React from 'react'\n// import { Theme, useTheme } from '@mui/material/styles';\n// import OutlinedInput from '@mui/material/OutlinedInput';\n// import MenuItem from '@mui/material/MenuItem';\n// import FormControl from '@mui/material/FormControl';\n// import Select, { SelectChangeEvent } from '@mui/material/Select';\n// const ITEM_HEIGHT = 48;\n// const ITEM_PADDING_TOP = 8;\n// const MenuProps = {\n//   PaperProps: {\n//     style: {\n//       maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n//       width: 250,\n//     },\n//   },\n// };\n// const names = [\n//     'Oliver Hansen',\n//     'Van Henry',\n//     'April Tucker',\n//     'Ralph Hubbard',\n//     'Omar Alexander',\n//     'Carlos Abbott',\n//     'Miriam Wagner',\n//     'Bradley Wilkerson',\n//     'Virginia Andrews',\n//     'Kelly Snyder',\n//   ];\n//   function getStyles(name: string, personName: readonly string[], theme: Theme) {\n//     return {\n//       fontWeight:\n//         personName.indexOf(name) === -1\n//           ? theme.typography.fontWeightRegular\n//           : theme.typography.fontWeightMedium,\n//     };\n//   }\n// const SelectOption = () => {\n//     const theme = useTheme();\n//     const [personName, setPersonName] = React.useState<string[]>([]);\n//     const handleChange = (event: SelectChangeEvent<typeof personName>) => {\n//       const {\n//         target: { value },\n//       } = event;\n//       setPersonName(\n//         // On autofill we get a stringified value.\n//         typeof value === 'string' ? value.split(',') : value,\n//       );\n//     };\n//   return (\n//     <div>\n//          <FormControl sx={{ m: 1, width: 300, mt: 3 }}>\n//         <Select\n//           multiple\n//           displayEmpty\n//           value={personName}\n//           onChange={handleChange}\n//           input={<OutlinedInput />}\n//           renderValue={(selected) => {\n//             if (selected.length === 0) {\n//               return <em>Placeholder</em>;\n//             }\n//             return selected.join(', ');\n//           }}\n//           MenuProps={MenuProps}\n//           inputProps={{ 'aria-label': 'Without label' }}\n//         >\n//           <MenuItem disabled value=\"\">\n//             <em>Placeholder</em>\n//           </MenuItem>\n//           {names.map((name) => (\n//             <MenuItem\n//               key={name}\n//               value={name}\n//               style={getStyles(name, personName, theme)}\n//             >\n//               {name}\n//             </MenuItem>\n//           ))}\n//         </Select>\n//       </FormControl>\n//     </div>\n//   )\n// }\n// export default SelectOption\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectOption\");","map":{"version":3,"names":["React","SelectOption"],"sources":["F:/project/JawadAbbasi/property051/src/Components/Banner/SelectOption.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst SelectOption = () => {\r\n  return (\r\n    <div>SelectOption</div>\r\n  )\r\n}\r\n\r\nexport default SelectOption\r\n\r\n\r\n// import React from 'react'\r\n// import { Theme, useTheme } from '@mui/material/styles';\r\n// import OutlinedInput from '@mui/material/OutlinedInput';\r\n// import MenuItem from '@mui/material/MenuItem';\r\n// import FormControl from '@mui/material/FormControl';\r\n// import Select, { SelectChangeEvent } from '@mui/material/Select';\r\n\r\n// const ITEM_HEIGHT = 48;\r\n// const ITEM_PADDING_TOP = 8;\r\n// const MenuProps = {\r\n//   PaperProps: {\r\n//     style: {\r\n//       maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n//       width: 250,\r\n//     },\r\n//   },\r\n// };\r\n\r\n// const names = [\r\n//     'Oliver Hansen',\r\n//     'Van Henry',\r\n//     'April Tucker',\r\n//     'Ralph Hubbard',\r\n//     'Omar Alexander',\r\n//     'Carlos Abbott',\r\n//     'Miriam Wagner',\r\n//     'Bradley Wilkerson',\r\n//     'Virginia Andrews',\r\n//     'Kelly Snyder',\r\n//   ];\r\n  \r\n//   function getStyles(name: string, personName: readonly string[], theme: Theme) {\r\n//     return {\r\n//       fontWeight:\r\n//         personName.indexOf(name) === -1\r\n//           ? theme.typography.fontWeightRegular\r\n//           : theme.typography.fontWeightMedium,\r\n//     };\r\n//   }\r\n// const SelectOption = () => {\r\n//     const theme = useTheme();\r\n//     const [personName, setPersonName] = React.useState<string[]>([]);\r\n  \r\n//     const handleChange = (event: SelectChangeEvent<typeof personName>) => {\r\n//       const {\r\n//         target: { value },\r\n//       } = event;\r\n//       setPersonName(\r\n//         // On autofill we get a stringified value.\r\n//         typeof value === 'string' ? value.split(',') : value,\r\n//       );\r\n//     };\r\n//   return (\r\n//     <div>\r\n//          <FormControl sx={{ m: 1, width: 300, mt: 3 }}>\r\n//         <Select\r\n//           multiple\r\n//           displayEmpty\r\n//           value={personName}\r\n//           onChange={handleChange}\r\n//           input={<OutlinedInput />}\r\n//           renderValue={(selected) => {\r\n//             if (selected.length === 0) {\r\n//               return <em>Placeholder</em>;\r\n//             }\r\n\r\n//             return selected.join(', ');\r\n//           }}\r\n//           MenuProps={MenuProps}\r\n//           inputProps={{ 'aria-label': 'Without label' }}\r\n//         >\r\n//           <MenuItem disabled value=\"\">\r\n//             <em>Placeholder</em>\r\n//           </MenuItem>\r\n//           {names.map((name) => (\r\n//             <MenuItem\r\n//               key={name}\r\n//               value={name}\r\n//               style={getStyles(name, personName, theme)}\r\n//             >\r\n//               {name}\r\n//             </MenuItem>\r\n//           ))}\r\n//         </Select>\r\n//       </FormControl>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n// export default SelectOption\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EACzB,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAJD;;KAAMA,Y;AAMN,eAAeA,YAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA"},"metadata":{},"sourceType":"module"}